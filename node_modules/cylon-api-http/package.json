{
  "_args": [
    [
      {
        "raw": "cylon-api-http@file:cylon-api-http",
        "scope": null,
        "escapedName": "cylon-api-http",
        "name": "cylon-api-http",
        "rawSpec": "file:cylon-api-http",
        "spec": "C:\\Capstone\\joulie-cylon\\cylon-api-http",
        "type": "directory"
      },
      "C:\\Capstone\\joulie-cylon"
    ]
  ],
  "_from": "cylon-api-http",
  "_id": "cylon-api-http@0.4.1",
  "_inCache": true,
  "_location": "/cylon-api-http",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cylon-api-http@file:cylon-api-http",
    "scope": null,
    "escapedName": "cylon-api-http",
    "name": "cylon-api-http",
    "rawSpec": "file:cylon-api-http",
    "spec": "C:\\Capstone\\joulie-cylon\\cylon-api-http",
    "type": "directory"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "file:cylon-api-http",
  "_shasum": "1dd95da0559b584c409289f48b40c3525440434e",
  "_shrinkwrap": null,
  "_spec": "cylon-api-http@file:cylon-api-http",
  "_where": "C:\\Capstone\\joulie-cylon",
  "author": {
    "name": "The Hybrid Group",
    "email": "cylonjs@hybridgroup.com"
  },
  "bugs": {
    "url": "https://github.com/hybridgroup/cylon-api-http/issues"
  },
  "contributors": [
    {
      "name": "Andrew Stewart",
      "email": "andrew@hybridgroup.com"
    }
  ],
  "dependencies": {
    "body-parser": "^1.13.3",
    "express": "^4.13.3",
    "lodash": "^3.10.1",
    "robeaux": "^0.5.0"
  },
  "description": "HTTP API add-on module for Cylon.JS",
  "devDependencies": {
    "chai": "^3.2.0",
    "eslint": "0.24.0",
    "mocha": "2.2.5",
    "sinon": "1.15.4",
    "sinon-chai": "2.8.0"
  },
  "homepage": "http://cylonjs.com",
  "keywords": [
    "cylon",
    "cylonjs",
    "cylons",
    "robot",
    "robots",
    "robotics",
    "iot",
    "api",
    "http"
  ],
  "license": "Apache-2.0",
  "main": "lib/api.js",
  "name": "cylon-api-http",
  "optionalDependencies": {},
  "readme": "# Cylon.js API plugin for HTTP\r\n\r\nCylon.js (http://cylonjs.com) is a JavaScript framework for robotics, physical computing, and the Internet of Things (IoT).\r\n\r\nAPI plugins are separate from the Cylon.js main module, to allow for greater modularization of Cylon robots.\r\n\r\nThis repository contains the Cylon API plugin for HTTP.\r\n\r\nFor more information about Cylon, check out the repo at https://github.com/hybridgroup/cylon\r\n\r\n[![Build Status](https://travis-ci.org/hybridgroup/cylon-api-socketio.svg)](https://travis-ci.org/hybridgroup/cylon-api-socketio)\r\n[![Code Climate](https://codeclimate.com/github/hybridgroup/cylon-api-socketio/badges/gpa.svg)](https://codeclimate.com/github/hybridgroup/cylon-api-socketio)\r\n[![Test Coverage](https://codeclimate.com/github/hybridgroup/cylon-api-socketio/badges/coverage.svg)](https://codeclimate.com/github/hybridgroup/cylon-api-socketio)\r\n\r\n## How To Install\r\n\r\n    $ npm install cylon cylon-api-http\r\n\r\n## How To Use\r\n\r\nWith both of these modules installed, you can make your robots accessible over HTTP:\r\n\r\n```javascript\r\n\"use strict\";\r\n\r\nvar Cylon = require(\"cylon\");\r\n\r\nCylon.api(\"http\", {\r\n  ssl: false // serve unsecured, over HTTP\r\n\r\n  // optional configuration here.\r\n  // for details see 'Configuration' section.\r\n});\r\n\r\nCylon.robot({\r\n  name: \"Maria\",\r\n\r\n  connections: {\r\n    arduino: { adaptor: 'firmata', port: '/dev/ttyACM0' }\r\n  },\r\n\r\n  devices: {\r\n    led: { driver: 'led', pin: 13 }\r\n  },\r\n\r\n  work: function() {\r\n    // we'll interact with this robot through the API\r\n  }\r\n}).start();\r\n```\r\n\r\n## How To Connect\r\n\r\nOnce you've got a Cylon instance with the API configured and running, you can use cURL to test it out:\r\n\r\n      $ curl http://127.0.0.1:4000/api/robots/Maria\r\n      { \"robot\": { \"name\": \"Maria\" /* ... */ } }\r\n\r\n## Routes\r\n\r\nThis plugin follows the [CPPP-IO][] specification.\r\n\r\nTo get started, you can visit the `/api` route in your browser to get an overview of the Cylon Master Control Program (MCP).\r\nThis provides a high level overview of your program:\r\n\r\n      $ curl http://127.0.0.1:4000/api | python -m json.tool\r\n      {\r\n          \"MCP\": {\r\n              \"commands\": [ ],\r\n              \"events\": [ ],\r\n              \"robots\": [\r\n                  {\r\n                      \"name\": \"Maria\",\r\n                      \"connections\": [\r\n                          {\r\n                              \"name\": \"arduino\",\r\n                              \"adaptor\": \"firmata\",\r\n                              \"details\": { \"port\": \"/dev/ttyACM0\" }\r\n                          }\r\n                      ],\r\n                      \"devices\": [\r\n                          {\r\n                              \"name\": \"led\",\r\n                              \"commands\": [ \"toggle\" ],\r\n                              \"connection\": \"arduino\",\r\n                              \"details\": { \"pin\": \"13\" },\r\n                              \"driver\": \"LED\"\r\n                          }\r\n                      ],\r\n                      \"commands\": [ ],\r\n                      \"events\": [ ]\r\n                  }\r\n              ]\r\n          }\r\n      }\r\n\r\nFor details on other available routes in the API and expected responses, please see the [specification document][spec].\r\n\r\n[CPPP-IO]: https://github.com/hybridgroup/cppp-io\r\n\r\n## Robeaux\r\n\r\nThis plugin includes a default front-end in [Robeaux][].\r\n\r\nRobeaux is a simple tool to use against the HTTP API, and explore your robots visually, while also able to issue commands to robots and listen for events.\r\n\r\n## Configuration\r\n\r\nOption     | Description\r\n------     | -----------\r\n`host`     | What HTTP host to serve from. Defaults to `127.0.0.1`.\r\n`port`     | What HTTP port to serve on. Defaults to `3000`.\r\n`auth`     | What authorization scheme to use. e.g. `{ type: \"basic\", user: \"username\", pass: \"password\"}`. Defaults to `false`.\r\n`CORS`     | Cross-Origin Resource Sharing option (HTTP Header: \"Access-Control-Allow-Origin\"). Defaults to \"*\".\r\n`serveDir` | Directory to serve as static assets. Defaults to the included [Robeaux][] installation.\r\n`ssl`      | SSL `key` and `cert` options, wrapped as an object. Set to `false` for an unsecured API. Defaults to included self-signed certs.\r\n\r\n[Robeaux]: https://github.com/hybridgroup/robeaux\r\n\r\n## Documentation\r\n\r\nWe're busy adding documentation to [cylonjs.com](http://cylonjs.com). Please check there as we continue to work on Cylon.js.\r\n\r\nThank you!\r\n\r\n## Contributing\r\n\r\nFor our contribution guidelines, please go to [https://github.com/hybridgroup/cylon/blob/master/CONTRIBUTING.md](https://github.com/hybridgroup/cylon/blob/master/CONTRIBUTING.md).\r\n\r\n## Release History\r\n\r\nFor the release history, please go to [https://github.com/hybridgroup/cylon-api-http/blob/master/RELEASES.md](https://github.com/hybridgroup/cylon-api-http/blob/master/RELEASES.md).\r\n\r\n## License\r\n\r\nCopyright (c) 2014-2016 The Hybrid Group. Licensed under the Apache 2.0 license.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/hybridgroup/cylon-api-http.git"
  },
  "version": "0.4.1"
}
